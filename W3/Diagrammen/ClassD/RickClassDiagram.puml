@startuml
title Class Diagram – Strategy Pattern: Transportmodule Triptop (met services voor externe APIs)

' <<strategy>> interface
interface TransportOption <<strategy>> {
  +getRoute(from: String, to: String): Route
  +getPrice(): BigDecimal
  +book(): BookingConfirmation
}

' <<concrete strategy>> classes
class CarTransport <<concrete strategy>> {
}
class TrainTransport <<concrete strategy>> {
  -trainService: TrainService
}
class BoatTransport <<concrete strategy>> {
  -ferryService: FerryService
}
class PlaneTransport <<concrete strategy>> {
  -flightService: FlightService
}

CarTransport ..|> TransportOption
TrainTransport ..|> TransportOption
BoatTransport ..|> TransportOption
PlaneTransport ..|> TransportOption

' <<context>> class
class TransportPlannerService <<context>> {
  -factory: TransportFactory
  -repository: TransportRepository
  -tracker: TransportTrackerService
  +planTransport(from: String, to: String, preference: String): BookingConfirmation
}

TransportPlannerService --> TransportOption : uses
TransportPlannerService --> TransportFactory
TransportPlannerService --> TransportRepository
TransportPlannerService --> TransportTrackerService

' Factory to choose strategy
class TransportFactory {
  +getTransportStrategy(preference: String): TransportOption
}

TransportFactory --> CarTransport
TransportFactory --> TrainTransport
TransportFactory --> BoatTransport
TransportFactory --> PlaneTransport

' Controller
class TransportPlannerController {
  -service: TransportPlannerService
  +planTransport(from: String, to: String, preference: String): BookingConfirmation
}

TransportPlannerController --> TransportPlannerService

' Repository
class TransportRepository {
  +saveBooking(booking: Booking): void
  +getStatus(bookingId: String): TransportStatus
}

' Tracker
class TransportTrackerService {
  +updateStatus(bookingId: String, status: TransportStatus): void
}

' Services die met externe APIs praten
class TrainService {
  +getTrainRoutes(from: String, to: String): List<Route>
}

class FlightService {
  +getFlights(from: String, to: String): List<Flight>
}

class FerryService {
  +getSailings(from: String, to: String): List<Sailing>
}

' Relaties strategieën naar services
TrainTransport --> TrainService
PlaneTransport --> FlightService
BoatTransport --> FerryService

' Relatie met tracker
CarTransport --> TransportTrackerService
TrainTransport --> TransportTrackerService
BoatTransport --> TransportTrackerService
PlaneTransport --> TransportTrackerService

@enduml
