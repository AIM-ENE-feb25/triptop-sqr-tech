@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
LAYOUT_WITH_LEGEND()
title Component Diagram – Transportmodule Triptop (Train & Plane Strategy)

Person(user, "Gebruiker", "Gebruikt Triptop om vervoer tussen overnachtingen te plannen")

' Container waarbinnen de componenten bestaan
Container_Boundary(app, "Triptop Application") {

  ' Controllers
  Component(controller, "TransportPlannerController", "Java", "Verwerkt gebruikersaanvragen en plant vervoer tussen overnachtingen")

  ' Services (businesslogica)
  Component(service, "TransportPlannerService", "Java", "Bevat logica om vervoersstrategie te selecteren en toe te passen")

  ' Factory
  Component(factory, "TransportFactory", "Java", "Levert juiste transportstrategie op basis van invoer (bijv. voorkeur of afstand)")

  ' Transportstrategie-interface
  Component(interface, "TransportOption (interface)", "Java Interface", "Bepaalt gedrag voor getRoute(), getPrice() en book()")

  ' Concrete strategieën (implementaties)
  Component(train, "TrainTransport", "Java", "Implementeert vervoer per trein")
  Component(plane, "PlaneTransport", "Java", "Implementeert vervoer per vliegtuig")

  ' Opslag en tracking
  Component(repo, "TransportRepository", "Java", "Slaat transportstatus en boekingsgegevens op")
  Component(tracker, "TransportTrackerService", "Java", "Stuurt statuswijzigingen door en houdt voortgang bij")
}

' Database
ContainerDb(database, "Database", "Relationale database", "Slaat routes, boekingen en transportstatus op")

' Externe services (buiten het systeem! alleen wat nodig is)
Container_Ext(nsapi, "NS API", "Extern systeem", "Levert treinverbindingen en prijzen")
Container_Ext(googleflightsapi, "googleflights API", "Extern systeem", "Levert vluchten en prijzen")

' Relaties
Rel(user, controller, "vraagt vervoer aan via planTransport(from, to)")
Rel(controller, service, "stuurt aanvraag naar")
Rel(service, factory, "vraagt juiste strategie op via")
Rel(factory, train, "levert concrete strategie")
Rel(factory, plane, "levert concrete strategie")

Rel(train, interface, "implementeert")
Rel(plane, interface, "implementeert")
Rel(service, interface, "gebruikt via interface")

Rel(service, repo, "slaat gegevens op in")
Rel(repo, database, "leest/schrijft transportdata")
Rel(service, tracker, "stuurt statusupdates naar")

Rel(train, tracker, "meldt status aan")
Rel(plane, tracker, "meldt status aan")

Rel(train, nsapi, "haalt routes op van NS API")
Rel(plane, googleflightsapi, "haalt vluchten op van googleflights API")

@enduml
